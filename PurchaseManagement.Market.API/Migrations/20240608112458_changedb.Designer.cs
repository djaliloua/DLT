// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PurchaseManagement.Market.API;

#nullable disable

namespace PurchaseManagement.Market.API.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20240608112458_changedb")]
    partial class changedb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.4.24267.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PurchaseManagement.Market.API.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Accuracy")
                        .HasColumnType("float");

                    b.Property<double?>("Altitude")
                        .HasColumnType("float");

                    b.Property<int>("AltitudeReferenceSystem")
                        .HasColumnType("int");

                    b.Property<double?>("Course")
                        .HasColumnType("float");

                    b.Property<bool>("IsFromMockProvider")
                        .HasColumnType("bit");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<bool>("ReducedAccuracy")
                        .HasColumnType("bit");

                    b.Property<double?>("Speed")
                        .HasColumnType("float");

                    b.Property<double?>("VerticalAccuracy")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("PurchaseManagement.Market.API.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsPurchased")
                        .HasColumnType("bit");

                    b.Property<string>("Item_Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Item_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Item_Price")
                        .HasColumnType("bigint");

                    b.Property<long>("Item_Quantity")
                        .HasColumnType("bigint");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("PurchaseManagement.Market.API.Models.ProductStatistics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductCount")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<double>("TotalProductsPrice")
                        .HasColumnType("float");

                    b.Property<double>("TotalProductsQuantity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseId");

                    b.ToTable("ProductStatistics");
                });

            modelBuilder.Entity("PurchaseManagement.Market.API.Models.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Purchase_Date")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("PurchaseManagement.Market.API.Models.Location", b =>
                {
                    b.HasOne("PurchaseManagement.Market.API.Models.Product", "Product")
                        .WithOne("Location")
                        .HasForeignKey("PurchaseManagement.Market.API.Models.Location", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PurchaseManagement.Market.API.Models.Product", b =>
                {
                    b.HasOne("PurchaseManagement.Market.API.Models.Purchase", "Purchase")
                        .WithMany("Products")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("PurchaseManagement.Market.API.Models.ProductStatistics", b =>
                {
                    b.HasOne("PurchaseManagement.Market.API.Models.Purchase", "Purchase")
                        .WithMany()
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("PurchaseManagement.Market.API.Models.Product", b =>
                {
                    b.Navigation("Location");
                });

            modelBuilder.Entity("PurchaseManagement.Market.API.Models.Purchase", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
