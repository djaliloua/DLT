<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="PurchaseManagement.Pages.AccountPage"
             xmlns:material="http://schemas.enisn-projects.io/dotnet/maui/uraniumui/material"
             xmlns:validation="clr-namespace:InputKit.Shared.Validations;assembly=InputKit.Maui"
             xmlns:m="clr-namespace:UraniumUI.Icons.MaterialIcons;assembly=UraniumUI.Icons.MaterialIcons"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:local="clr-namespace:PurchaseManagement.ServiceLocator"
             xmlns:sk="clr-namespace:Maui.Skeleton;assembly=Maui.Skeleton"
             BackgroundColor="LightBlue"
             x:Name="page"
             BindingContext="{x:Static local:ViewModelLocator.AccountPageViewModel}"
             Title="Account">
    
    <ContentPage.Resources>
        

    </ContentPage.Resources>
    <ContentPage.ToolbarItems>
        <ToolbarItem Text="{Binding AccountListViewViewModel.Counter}"
                     Order="Primary" />
        <ToolbarItem Text="Export TXT"
                     Command="{Binding ExportToPdfCommand}"
                     Order="Secondary">
            <ToolbarItem.IconImageSource>
                <FontImageSource FontFamily="MaterialRegular"
                                 Color="AliceBlue"
                                 Glyph="{x:Static m:MaterialRound.Text_format}" />
            </ToolbarItem.IconImageSource>
        </ToolbarItem>
        <ToolbarItem Text="Export PDF"
                     Order="Secondary">
            <ToolbarItem.IconImageSource>
                <FontImageSource FontFamily="MaterialRegular"
                                 Color="AliceBlue"
                                 Glyph="{x:Static m:MaterialRound.Security_update}" />
            </ToolbarItem.IconImageSource>
        </ToolbarItem>
    </ContentPage.ToolbarItems>
    <ContentPage.Triggers>
        <DataTrigger TargetType="ContentPage"
                     Binding="{Binding Source={x:Reference page}, Path=IsEnabled}"
                     Value="true">
            <Setter Property="BackgroundColor"
                    Value="{StaticResource Surface}" />

        </DataTrigger>
    </ContentPage.Triggers>
    <ContentPage.Behaviors>
        <toolkit:StatusBarBehavior StatusBarColor="Fuchsia"
                                   StatusBarStyle="LightContent" />
        
    </ContentPage.Behaviors>
    <Grid Margin="20" RowSpacing="25">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0"
              VerticalOptions="Start"
              ColumnSpacing="10"
              BindingContext="{Binding AccountHeaderViewModel}"
              >
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <material:DatePickerField Date="{Binding SelectedDate}"
                                      Title="Date" />
            <material:TextField Title="Money"
                                x:Name="entry"
                                Grid.Column="1"
                                VerticalOptions="End"
                                Text="{Binding Money}"
                                Keyboard="Numeric"
                                CornerRadius="10">
                <!--<validation:RequiredValidation />-->
            </material:TextField>
            <Button FontAttributes="Bold"
                    HorizontalOptions="CenterAndExpand"
                    VerticalOptions="Center"
                    Command="{Binding AddCommand}"
                    IsEnabled="True"
                    CommandParameter="{Binding Source={x:Reference entry}, Path=Text}"
                    Grid.Column="2">
                <Button.Triggers>
                    <DataTrigger TargetType="Button" Binding="{Binding Source={x:Reference entry}, Path=Text}" Value="0">
                        <Setter Property="IsEnabled"
                                Value="False" />
                    </DataTrigger>
                    <DataTrigger TargetType="Button"
                                 Binding="{Binding Source={x:Reference entry}, Path=Text}"
                                 Value="">
                        <Setter Property="IsEnabled"
                                Value="False" />
                    </DataTrigger>
                </Button.Triggers>
                <Button.ImageSource>
                    <FontImageSource FontFamily="MaterialRegular"
                                     Glyph="{x:Static m:MaterialRound.Add}" />
                </Button.ImageSource>
            </Button>
        </Grid>
        <ScrollView Grid.Row="1"
                    BindingContext="{Binding AccountListViewViewModel}"
                    VerticalScrollBarVisibility="Never">
            <VerticalStackLayout>
                <ActivityIndicator IsRunning="{Binding IsActivity}"
                                   Color="Blue"
                                   VerticalOptions="Center"
                                   HorizontalOptions="Center"
                                   HeightRequest="80"
                                   WidthRequest="80"
                                   x:Name="activity"
                                   ZIndex="10">
                    <ActivityIndicator.Triggers>
                        <DataTrigger TargetType="ActivityIndicator"
                                     Binding="{Binding IsActivity}"
                                     Value="True">
                            <Setter Property="IsVisible"
                                    Value="Visible" />
                        </DataTrigger>
                        <DataTrigger TargetType="ActivityIndicator"
                                     Binding="{Binding IsActivity}"
                                     Value="False">
                            <Setter Property="IsVisible"
                                    Value="Hidden" />
                        </DataTrigger>
                    </ActivityIndicator.Triggers>
                </ActivityIndicator>
                <ListView ItemsSource="{Binding Items, Mode=TwoWay}"
                          Margin="0,20,0,0"
                          x:Name="listview"
                          RowHeight="150"
                          VerticalScrollBarVisibility="Never"
                          VerticalOptions="Start"
                          HandlerChanged="listview_HandlerChanged"
                          CachingStrategy="RecycleElementAndDataTemplate"
                          sk:Skeleton.IsParent="True"
                          sk:Skeleton.IsBusy="{Binding IsActivity}"
                          sk:Skeleton.Animation="{sk:DefaultAnimation Fade}"
                          SelectedItem="{Binding SelectedItem}">
                    <ListView.Triggers>
                        <DataTrigger TargetType="ListView"
                                     Binding="{Binding IsActivity}"
                                     Value="True">
                            <Setter Property="IsVisible"
                                    Value="Hidden" />
                        </DataTrigger>
                        <DataTrigger TargetType="ListView"
                                     Binding="{Binding IsActivity}"
                                     Value="False">
                            <Setter Property="IsVisible"
                                    Value="Visible" />
                        </DataTrigger>
                    </ListView.Triggers>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <ViewCell x:Name="viewCell">
                                <SwipeView>
                                    <Frame CornerRadius="10"
                                           BackgroundColor="{StaticResource Surface}">
                                        <Grid Padding="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Label Text="{Binding DateTime, StringFormat='{0:yyyy-MM-dd}'}"
                                                   Padding="10,0,0,0"
                                                   VerticalOptions="Center" />
                                            <Label VerticalOptions="Center"
                                                   Text="{Binding Money, StringFormat='{0:C2}'}"
                                                   Grid.Column="1" />

                                            <Button FontAttributes="Bold"
                                                    HorizontalOptions="End"
                                                    VerticalOptions="Center"
                                                    Command="{Binding DeleteCommand}"
                                                    BindingContext="{Binding Source={x:Reference listview}, Path=BindingContext}"
                                                    Grid.Column="2">
                                                <Button.ImageSource>
                                                    <FontImageSource FontFamily="MaterialRegular"
                                                                     Glyph="{x:Static m:MaterialRound.Delete}" />
                                                </Button.ImageSource>
                                            </Button>
                                        </Grid>
                                    </Frame>
                                </SwipeView>
                            </ViewCell>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </VerticalStackLayout>
        </ScrollView>
        
    </Grid>
</ContentPage>