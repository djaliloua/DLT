<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="PurchaseManagement.Pages.AccountPage"
             xmlns:material="http://schemas.enisn-projects.io/dotnet/maui/uraniumui/material"
             xmlns:validation="clr-namespace:InputKit.Shared.Validations;assembly=InputKit.Maui"
             xmlns:m="clr-namespace:UraniumUI.Icons.MaterialIcons;assembly=UraniumUI.Icons.MaterialIcons"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:android="clr-namespace:Microsoft.Maui.Controls.PlatformConfiguration.AndroidSpecific;assembly=Microsoft.Maui.Controls"
             xmlns:local="clr-namespace:PurchaseManagement.ServiceLocator"
             xmlns:views="clr-namespace:PurchaseManagement.MVVM.Views"
             xmlns:sk="clr-namespace:Maui.Skeleton;assembly=Maui.Skeleton"
             BackgroundColor="LightBlue"
             x:Name="page"
             BindingContext="{x:Static local:ViewModelLocator.AccountPageViewModel}"
             Title="">
    <ContentPage.ToolbarItems>
        <ToolbarItem Text="{Binding AccountListViewViewModel.Counter}"
                     Order="Primary" />
        <ToolbarItem Text="Export TXT"
                     Command="{Binding ExportToPdfCommand}"
                     Order="Secondary">
            <ToolbarItem.IconImageSource>
                <FontImageSource FontFamily="MaterialRegular"
                                 Color="AliceBlue"
                                 Glyph="{x:Static m:MaterialRound.Text_format}" />
            </ToolbarItem.IconImageSource>
        </ToolbarItem>
        <ToolbarItem Text="Export PDF"
                     Order="Secondary">
            <ToolbarItem.IconImageSource>
                <FontImageSource FontFamily="MaterialRegular"
                                 Color="AliceBlue"
                                 Glyph="{x:Static m:MaterialRound.Security_update}" />
            </ToolbarItem.IconImageSource>
        </ToolbarItem>
    </ContentPage.ToolbarItems>
    <ContentPage.Triggers>
        <DataTrigger TargetType="ContentPage"
                     Binding="{Binding Source={x:Reference page}, Path=IsEnabled}"
                     Value="true">
            <Setter Property="BackgroundColor"
                    Value="{StaticResource Surface}" />

        </DataTrigger>
    </ContentPage.Triggers>
    <ContentPage.Behaviors>
        <toolkit:StatusBarBehavior StatusBarColor="Fuchsia"
                                   StatusBarStyle="LightContent" />

    </ContentPage.Behaviors>
    <Grid Margin="20"
          RowSpacing="25">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0"
              VerticalOptions="Start"
              ColumnSpacing="10"
              BindingContext="{Binding AccountHeaderViewModel}"
              ZIndex="50"
              x:Name="grid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Image Source="https://aka.ms/campus.jpg" />
            <Image Source="https://aka.ms/campus.jpg"
                   Grid.Column="1" />

        </Grid>
        <Grid Grid.Row="1"
              BindingContext="{Binding AccountListViewViewModel}">
            <ActivityIndicator IsRunning="{Binding IsActivity}"
                               Color="Blue"
                               VerticalOptions="Center"
                               HorizontalOptions="Center"
                               HeightRequest="80"
                               WidthRequest="80"
                               x:Name="activity"
                               ZIndex="10">
                <ActivityIndicator.Triggers>
                    <DataTrigger TargetType="ActivityIndicator"
                                 Binding="{Binding IsActivity}"
                                 Value="True">
                        <Setter Property="IsVisible"
                                Value="Visible" />
                    </DataTrigger>
                    <DataTrigger TargetType="ActivityIndicator"
                                 Binding="{Binding IsActivity}"
                                 Value="False">
                        <Setter Property="IsVisible"
                                Value="Hidden" />
                    </DataTrigger>
                </ActivityIndicator.Triggers>
            </ActivityIndicator>
            <ListView ItemsSource="{Binding Items, Mode=TwoWay}"
                      Margin="0,20,0,0"
                      x:Name="listview"
                      RowHeight="150"
                      IsPullToRefreshEnabled="True"
                      RefreshControlColor="Red"
                      RefreshCommand="{Binding RefreshCommand}"
                      IsRefreshing="{Binding IsRefreshed}"
                      VerticalScrollBarVisibility="Never"
                      VerticalOptions="Center"
                      HandlerChanged="listview_HandlerChanged"
                      CachingStrategy="RecycleElementAndDataTemplate"
                      SelectedItem="{Binding SelectedItem}">
                <ListView.Triggers>
                    <DataTrigger TargetType="ListView"
                                 Binding="{Binding IsActivity}"
                                 Value="True">
                        <Setter Property="IsVisible"
                                Value="Hidden" />
                    </DataTrigger>
                    <DataTrigger TargetType="ListView"
                                 Binding="{Binding IsActivity}"
                                 Value="False">
                        <Setter Property="IsVisible"
                                Value="Visible" />
                    </DataTrigger>
                </ListView.Triggers>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <ViewCell x:Name="viewCell">
                            <SwipeView android:SwipeView.SwipeTransitionMode="Drag">
                                <SwipeView.LeftItems>
                                    <SwipeItems>
                                        <SwipeItem BackgroundColor="{StaticResource Surface}"
                                                   Command="{Binding DeleteCommand}"
                                                   CommandParameter="{Binding Source={x:Reference grid}, Path=BindingContext}"
                                                   BindingContext="{Binding Source={x:Reference listview}, Path=BindingContext}">
                                            <SwipeItem.IconImageSource>
                                                <FontImageSource FontFamily="MaterialRegular"
                                                                 Color="AliceBlue"
                                                                 Glyph="{x:Static m:MaterialRound.Delete}" />
                                            </SwipeItem.IconImageSource>
                                        </SwipeItem>
                                    </SwipeItems>
                                   
                                </SwipeView.LeftItems>
                                <SwipeView.RightItems>
                                    <SwipeItem BackgroundColor="{StaticResource Surface}"
                                               Command="{Binding EditCommand}"
                                               CommandParameter="{Binding Source={x:Reference grid}, Path=BindingContext}"
                                               BindingContext="{Binding Source={x:Reference listview}, Path=BindingContext}">
                                        <SwipeItem.IconImageSource>
                                            <FontImageSource FontFamily="MaterialRegular"
                                                             Color="AliceBlue"
                                                             Glyph="{x:Static m:MaterialRound.Edit}" />
                                        </SwipeItem.IconImageSource>
                                    </SwipeItem>
                                </SwipeView.RightItems>
                                <Frame CornerRadius="0"
                                       HasShadow="True"
                                       Padding="10"
                                       ZIndex="30"
                                       BackgroundColor="{StaticResource Surface}">
                                    <views:AccountListViewTemplate x:Name="grid"/>
                                </Frame>
                            </SwipeView>
                        </ViewCell>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <Button FontAttributes="Bold"
                    HorizontalOptions="End"
                    Margin="0,0,20,20"
                    BindingContext="{Binding Source={x:Reference grid}, Path=BindingContext}"
                    VerticalOptions="End"
                    Command="{Binding AddCommand}"
                    IsEnabled="True"
                    Grid.Column="2">
                <Button.ImageSource>
                    <FontImageSource FontFamily="MaterialRegular"
                                     Glyph="{x:Static m:MaterialRound.Add}" />
                </Button.ImageSource>
            </Button>
        </Grid>
    </Grid>
</ContentPage>